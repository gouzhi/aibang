<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="HjsUsersOptLog">

	<resultMap id="RM_HjsUsersOptLog" type="com.cifex.transfer.model.dto.HjsUsersOptLog">
        <result property="id" column="ID"/>
        <result property="userId" column="USER_ID"/>
        <result property="typeId" column="TYPE_ID"/>
        <result property="result" column="RESULT"/>
        <result property="content" column="CONTENT"/>
        <result property="createIp" column="CREATE_IP"/>
        <result property="createTime" column="CREATE_TIME"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="HjsUsersOptLog.columns">
	    <![CDATA[
		ID,USER_ID,TYPE_ID,RESULT,CONTENT,CREATE_IP,CREATE_TIME
	    ]]>
	</sql>

    <sql id="HjsUsersOptLog.tbcolumns">
	    <![CDATA[
		tb.ID,tb.USER_ID,tb.TYPE_ID,tb.RESULT,tb.CONTENT,tb.CREATE_IP,tb.CREATE_TIME
	    ]]>
	</sql>
	
	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="HjsUsersOptLog.insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO hjs_users_opt_log (
        	ID ,
        	USER_ID ,
        	TYPE_ID ,
        	RESULT ,
        	CONTENT ,
        	CREATE_IP ,
        	CREATE_TIME 
        ) VALUES (
        	#{id} ,
        	#{userId} ,
        	#{typeId} ,
        	#{result} ,
        	#{content} ,
        	#{createIp} ,
        	#{createTime} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="HjsUsersOptLog.update" >
    <![CDATA[
        UPDATE hjs_users_opt_log SET
	        USER_ID = #{userId} ,
	        TYPE_ID = #{typeId} ,
	        RESULT = #{result} ,
	        CONTENT = #{content} ,
	        CREATE_IP = #{createIp} ,
	        CREATE_TIME = #{createTime} 
        WHERE 
	        ID = #{id} 
    ]]>
	</update>


   
	
    <update id="HjsUsersOptLog.remove">
    <![CDATA[
        UPDATE hjs_users_opt_log SET
	       IS_DEL=1,
	       DELETE_TIME=#{deleteTime} 
        WHERE 
        ID = #{id} 
    ]]>
    </update>
    
    
    <delete id="HjsUsersOptLog.delete">
    <![CDATA[
        DELETE FROM hjs_users_opt_log WHERE
        ID = #{id} 
    ]]>
    </delete>
    
    <select id="HjsUsersOptLog.getById" resultMap="RM_HjsUsersOptLog">
		SELECT <include refid="HjsUsersOptLog.columns" />
	    <![CDATA[
		    FROM hjs_users_opt_log 
	        WHERE 
		        ID = #{id} 
	    ]]>
	</select>
	
	<sql id="HjsUsersOptLog.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(id)">
				AND tb.ID = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(userId)">
				AND tb.USER_ID = #{userId}
			</if>
	       <if test="@Ognl@isNotEmpty(typeId)">
				AND tb.TYPE_ID = #{typeId}
			</if>
	       <if test="@Ognl@isNotEmpty(result)">
				AND tb.RESULT = #{result}
			</if>
	       <if test="@Ognl@isNotEmpty(content)">
				AND tb.CONTENT = #{content}
			</if>
	       <if test="@Ognl@isNotEmpty(createIp)">
				AND tb.CREATE_IP = #{createIp}
			</if>
	       <if test="@Ognl@isNotEmpty(createTimeBegin)">
				AND tb.CREATE_TIME >= #{createTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(createTimeEnd)">
				AND tb.CREATE_TIME &lt;= #{createTimeEnd}
		   </if>
		</where>
	</sql>
		
    <select id="HjsUsersOptLog.findPage.count" resultType="long">
        SELECT count(*) FROM hjs_users_opt_log tb 
		<include refid="HjsUsersOptLog.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="HjsUsersOptLog.findPage" resultType="map">
    	SELECT <include refid="HjsUsersOptLog.tbcolumns" />
	    FROM hjs_users_opt_log tb
		<include refid="HjsUsersOptLog.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
			<if test="@Ognl@isNotEmpty(offset) and @Ognl@isNotEmpty(pageSize)">
		 limit ${offset},${pageSize}
		</if>
    </select>

	
</mapper>

