<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd	
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
        http://www.springframework.org/schema/tx/spring-tx-2.0.xsd"
		>
	<!-- 消息接收端——监听形式 -->


	<!-- 配置JMS连接工厂 -->
	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="failover:(${ACTIVEMQ_URL})" />
	</bean>



	<!-- 定义消息队列（Queue） 登录-->
	<bean id="queueDestinationLogin" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 设置消息队列的名字 -->
		<constructor-arg>
			<value>queueLogin</value>
		</constructor-arg>
	</bean>
	<!-- 配置消息队列监听者（Queue），代码下面给出，只有一个onMessage方法 -->
	<bean id="queueMessageLoginListener" class="com.cifex.web.daemon.listener.LoginListener" />
	<!-- 消息监听容器（Queue），配置连接工厂，监听的队列是queueDestinationLogin，监听器是上面定义的监听器 -->
	<bean id="jmsContainer"
		  class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="queueDestinationLogin" />
		<property name="messageListener" ref="queueMessageLoginListener" />
	</bean>



	<!-- 定义消息队列（Queue） ——注册-->
	<bean id="queueDestinationRegist" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 设置消息队列的名字 -->
		<constructor-arg>
			<value>queueRegist</value>
		</constructor-arg>
	</bean>
	<!-- 配置消息队列监听者（Queue），代码下面给出，只有一个onMessage方法 -->
	<bean id="queueMessageRegListener" class="com.cifex.web.daemon.listener.RegisterListener" />
	<!-- 消息监听容器（Queue），配置连接工厂，监听的队列是queueDestinationRegist，监听器是上面定义的监听器 -->
	<bean id="jmsContainerReg"
		  class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="queueDestinationRegist" />
		<property name="messageListener" ref="queueMessageRegListener" />
	</bean>
	
	<!-- 定义消息队列（Queue） ——放款金额 -->
	<bean id="queueDestinationLoans" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 设置消息队列的名字 -->
		<constructor-arg>
			<value>queueLoans</value>
		</constructor-arg>
	</bean>
	<!-- 配置消息队列监听者（Queue），代码下面给出，只有一个onMessage方法 -->
	<bean id="queueMessageLoansListener" class="com.cifex.web.daemon.listener.LoansListener" />
	<!-- 消息监听容器（Queue），配置连接工厂，监听的队列是queueDestinationLoans，监听器是上面定义的监听器 -->
	<bean id="jmsContainerLoa"
		  class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="queueDestinationLoans" />
		<property name="messageListener" ref="queueMessageLoansListener" />
	</bean>

	<!-- 定义消息队列（Queue） ——投资-->
	<bean id="queueDestinationPay" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 设置消息队列的名字 -->
		<constructor-arg>
			<value>queuePay</value>
		</constructor-arg>
	</bean>
	<!-- 配置消息队列监听者（Queue），代码下面给出，只有一个onMessage方法 -->
	<bean id="queueMessagePayListener" class="com.cifex.web.daemon.listener.PayListener" />
	<!-- 消息监听容器（Queue），配置连接工厂，监听的队列是queueDestinationPay，监听器是上面定义的监听器 -->
	<bean id="jmsContainerPay"
		  class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="queueDestinationPay" />
		<property name="messageListener" ref="queueMessagePayListener" />
	</bean>
	
	
	<!-- 定义消息队列（Queue） ——绑卡-->
	<bean id="queueDestinationBindCard" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 设置消息队列的名字 -->
		<constructor-arg>
			<value>queueBindCard</value>
		</constructor-arg>
	</bean>
	<!-- 配置消息队列监听者（Queue），代码下面给出，只有一个onMessage方法 -->
	<bean id="queueDestinationBindCardListener" class="com.cifex.web.daemon.listener.BindCardListener" />
	<!-- 消息监听容器（Queue），配置连接工厂，监听的队列是queueDestinationPay，监听器是上面定义的监听器 -->
	<bean id="jmsContainerBindCard" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="queueDestinationBindCard" />
		<property name="messageListener" ref="queueDestinationBindCardListener" />
	</bean>
	
	<!-- 定义消息队列（Queue） ——开户-->
	<bean id="queueDestinationOpenAccount" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 设置消息队列的名字 -->
		<constructor-arg>
			<value>queueAccount</value>
		</constructor-arg>
	</bean>
	<!-- 配置消息队列监听者（Queue），代码下面给出，只有一个onMessage方法 -->
	<bean id="queueDestinationAccountListener" class="com.cifex.web.daemon.listener.CorpRegisterListener" />
	<!-- 消息监听容器（Queue），配置连接工厂，监听的队列是queueDestinationPay，监听器是上面定义的监听器 -->
	<bean id="jmsContainerAccount" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="queueDestinationOpenAccount" />
		<property name="messageListener" ref="queueDestinationAccountListener" />
	</bean>
	

</beans>
