<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="AbUsersMessage">

	<resultMap id="RM_AbUsersMessage" type="com.aibang.transfer.model.dto.AbUsersMessage">
        <result property="id" column="ID"/>
        <result property="type" column="TYPE"/>
        <result property="status" column="STATUS"/>
        <result property="sendLoginid" column="SEND_LOGINID"/>
        <result property="receiveLoginid" column="RECEIVE_LOGINID"/>
        <result property="msgTitle" column="MSG_TITLE"/>
        <result property="contents" column="CONTENTS"/>
        <result property="parentId" column="PARENT_ID"/>
        <result property="optId" column="OPT_ID"/>
        <result property="createTime" column="CREATE_TIME"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="AbUsersMessage.columns">
	    <![CDATA[
		ID,TYPE,STATUS,SEND_LOGINID,RECEIVE_LOGINID,MSG_TITLE,CONTENTS,PARENT_ID,OPT_ID,CREATE_TIME
	    ]]>
	</sql>

    <sql id="AbUsersMessage.tbcolumns">
	    <![CDATA[
		tb.ID,tb.TYPE,tb.STATUS,tb.SEND_LOGINID,tb.RECEIVE_LOGINID,tb.MSG_TITLE,tb.CONTENTS,tb.PARENT_ID,tb.OPT_ID,tb.CREATE_TIME
	    ]]>
	</sql>
	
	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="AbUsersMessage.insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO ab_users_message (
        	ID ,
        	TYPE ,
        	STATUS ,
        	SEND_LOGINID ,
        	RECEIVE_LOGINID ,
        	MSG_TITLE ,
        	CONTENTS ,
        	PARENT_ID ,
        	OPT_ID ,
        	CREATE_TIME 
        ) VALUES (
        	#{id} ,
        	#{type} ,
        	#{status} ,
        	#{sendLoginid} ,
        	#{receiveLoginid} ,
        	#{msgTitle} ,
        	#{contents} ,
        	#{parentId} ,
        	#{optId} ,
        	#{createTime} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="AbUsersMessage.update" >
    <![CDATA[
        UPDATE ab_users_message SET
	        TYPE = #{type} ,
	        STATUS = #{status} ,
	        SEND_LOGINID = #{sendLoginid} ,
	        RECEIVE_LOGINID = #{receiveLoginid} ,
	        MSG_TITLE = #{msgTitle} ,
	        CONTENTS = #{contents} ,
	        PARENT_ID = #{parentId} ,
	        OPT_ID = #{optId} ,
	        CREATE_TIME = #{createTime} 
        WHERE 
	        ID = #{id} 
    ]]>
	</update>


   
	
    <update id="AbUsersMessage.remove">
    <![CDATA[
        UPDATE ab_users_message SET
	       IS_DEL=1,
	       DELETE_TIME=#{deleteTime} 
        WHERE 
        ID = #{id} 
    ]]>
    </update>
    
    
    <delete id="AbUsersMessage.delete">
    <![CDATA[
        DELETE FROM ab_users_message WHERE
        ID = #{id} 
    ]]>
    </delete>
    
    <select id="AbUsersMessage.getById" resultMap="RM_AbUsersMessage">
		SELECT <include refid="AbUsersMessage.columns" />
	    <![CDATA[
		    FROM ab_users_message 
	        WHERE 
		        ID = #{id} 
	    ]]>
	</select>
	
	<sql id="AbUsersMessage.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(id)">
				AND tb.ID = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(type)">
				AND tb.TYPE = #{type}
			</if>
	       <if test="@Ognl@isNotEmpty(status)">
				AND tb.STATUS = #{status}
			</if>
	       <if test="@Ognl@isNotEmpty(sendLoginid)">
				AND tb.SEND_LOGINID = #{sendLoginid}
			</if>
	       <if test="@Ognl@isNotEmpty(receiveLoginid)">
				AND tb.RECEIVE_LOGINID = #{receiveLoginid}
			</if>
	       <if test="@Ognl@isNotEmpty(msgTitle)">
				AND tb.MSG_TITLE = #{msgTitle}
			</if>
	       <if test="@Ognl@isNotEmpty(contents)">
				AND tb.CONTENTS = #{contents}
			</if>
	       <if test="@Ognl@isNotEmpty(parentId)">
				AND tb.PARENT_ID = #{parentId}
			</if>
	       <if test="@Ognl@isNotEmpty(optId)">
				AND tb.OPT_ID = #{optId}
			</if>
	       <if test="@Ognl@isNotEmpty(createTimeBegin)">
				AND tb.CREATE_TIME >= #{createTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(createTimeEnd)">
				AND tb.CREATE_TIME &lt;= #{createTimeEnd}
		   </if>
		</where>
	</sql>
		
    <select id="AbUsersMessage.findPage.count" resultType="long">
        SELECT count(*) FROM ab_users_message tb 
		<include refid="AbUsersMessage.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="AbUsersMessage.findPage" resultType="map">
    	SELECT <include refid="AbUsersMessage.tbcolumns" />
	    FROM ab_users_message tb
		<include refid="AbUsersMessage.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
		<if test="@Ognl@isNotEmpty(offset) and @Ognl@isNotEmpty(pageSize)">
		 limit ${offset},${pageSize} 
		</if>
    </select>
    
    <sql id="AbUsersMessage.findNoticesPageByUserId.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(type)">
				AND tb.TYPE = #{type}
			</if>
	       <if test="@Ognl@isNotEmpty(receiveLoginid)">
				AND tb.RECEIVE_LOGINID = #{receiveLoginid}
			</if>
			 <if test="@Ognl@isNotEmpty(statusArray)">
			    AND tb.STATUS in 
				<foreach item="item" index="index" collection="statusArray" open="(" separator="," close=")">
	                 #{item}
			    </foreach>
			</if> 
		</where>
	</sql>
    <select id="AbUsersMessage.findNoticesPageByUserId" resultType="map">
    	SELECT <include refid="AbUsersMessage.tbcolumns" />
	    FROM ab_users_message tb
		<include refid="AbUsersMessage.findNoticesPageByUserId.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
		<if test="@Ognl@isNotEmpty(offset) and @Ognl@isNotEmpty(pageSize)">
		 limit ${offset},${pageSize} 
		</if>
    </select>

	<select id="AbUsersMessage.findNoticesPageByUserId.count" resultType="long">
        SELECT count(*) FROM ab_users_message tb 
		<include refid="AbUsersMessage.findNoticesPageByUserId.where"/>    
    </select>
	
	<select id="AbUsersMessage.findAll" resultMap="RM_AbUsersMessage">
    	SELECT <include refid="AbUsersMessage.columns" />
	    FROM ab_users_message  
    </select>
    <!-- 统计登录用户未读的消息数量 -->
    <select id="AbUsersMessage.getUnreadMessageCount" resultType="int">
        select count(*) from ab_users_message where `STATUS`=2 and RECEIVE_LOGINID=#{receiveLoginid}
    </select>
</mapper>

