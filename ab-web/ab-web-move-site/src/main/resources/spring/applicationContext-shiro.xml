<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/util 
						http://www.springframework.org/schema/util/spring-util.xsd">
	
	 
	
	<!-- ================ Shiro start ================ -->
		
	<!-- shiro filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <property name="securityManager" ref="securityManager"/>
	 
	   	<property name="loginUrl" value="/login" />
			
		<property name="successUrl" value="/" />
		
		<property name="unauthorizedUrl" value="/login" />
		<!-- 拦截前做自动登录相关处理 -->
		<property name="filters">  
            <util:map>  
                <entry key="authc">  
                    <bean class="com.aibang.web.move.site.interceptor.CustomFormAuthenticationFilter">  
                    </bean>  
                </entry>  
            </util:map>  
        </property>
		
		<property name="filterChainDefinitions">
			<value>
			/static/** 	= anon
           	/login	    = anon
           	/toReg      = anon
           	/user/**	= authc
			</value>
		</property>
	</bean>
	
	 
	<!-- shiro securityManager -->
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	 
	    <property name="realm" ref="ShiroRealm" />
	 
	    <!-- sessionManager -->
	    <property name="sessionManager" ref="sessionManager" />
	 
	    <!-- cacheManager -->
	    <property name="cacheManager" ref="cacheManager" />
	  	<!-- rememberMeManager -->
	  	<property name="rememberMeManager" ref="rememberMeManager"/>
	</bean>
	
	
	<!-- 項目自定义的Realm -->
    <bean id="ShiroRealm" class="com.aibang.framework.shiro.ShiroRealm" ></bean>
	    
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
	<!-- shiro redisManager -->
	<bean id="redisManager" class="org.crazycake.shiro.RedisManager">
	    <property name="host" value="${REDIS.SERVER.IP}"/>
	    <property name="port" value="${REDIS.SERVER.PORT}"/>
	    <!-- <property name="expire" value="1800"/> -->
	    <!-- optional properties:
	    <property name="timeout" value="10000"/>
	    <property name="password" value="123456"/>
	    -->
	</bean>
	 
	<!-- redisSessionDAO -->
	<bean id="redisSessionDAO" class="org.crazycake.shiro.RedisSessionDAO">
	    <property name="redisManager" ref="redisManager" />
	</bean>
	 
	 <!-- 会话Cookie模板 -->  
	<!-- <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
	    <constructor-arg value="sid"/>  
	    <property name="httpOnly" value="true"/>  
	    <property name="maxAge" value="180000"/>  
	</bean>   -->
	
	<!-- sessionManager -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	    <property name="sessionDAO" ref="redisSessionDAO" />
	    <!-- cookies 方式 -->
	    <!-- <property name="sessionIdCookie" ref="sessionIdCookie" />   
	    <property name="sessionIdCookieEnabled" value="true"/>
	    <property name="sessionIdCookie.name" value="sid"/> -->
	    <!-- session 方式 -->
	    <!-- 设置全局会话超时时间，默认30分钟，即如果30分钟内没有访问会话将过期；(1800000) -->  
        <property name="globalSessionTimeout" value="1800000" />  
        <!-- 是否在会话过期后会调用SessionDAO的delete方法删除会话 默认true -->  
        <property name="deleteInvalidSessions" value="true" />  
        <!-- 会话验证器调度时间 -->  
        <property name="sessionValidationInterval" value="1800000" />  
        
	    <property name="sessionIdCookie.domain" value="${WEB_DOMAIN}"/>
	    <property name="sessionIdCookie.name" value="FRONTSIONID"/>
	    <property name="sessionIdCookie.path" value="/"/> 
	     
	</bean>
	<!-- rememberMeCookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <constructor-arg value="rememberMe"/>  
        <property name="httpOnly" value="true"/>  
        <property name="maxAge" value="1296000"/>  
    </bean>  
   
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">  
        <!-- <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>  -->
        <property name="cookie" ref="rememberMeCookie"/>  
    </bean>  
	 
	<!-- cacheManager -->
	<bean id="cacheManager" class="org.crazycake.shiro.RedisCacheManager">
	    <property name="redisManager" ref="redisManager" />
	</bean>
    
    

	<!-- AOP式方法级权限检查,开启shiro注解 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean id="authorizationAttributeSourceAdvisor" class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
	<!-- ================ Shiro end ================ -->
	
   
</beans>
